version: 2.1
orbs:
  coveralls: coveralls/coveralls@1.0.6
  sonarcloud: sonarsource/sonarcloud@1.0.3

jobs:
  prepare_environment:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - checkout
      - run:
          name: Pull git submodules
          command: |
            git submodule init
            git submodule update
      - run:
          name: Create build directory
          command: |
            mkdir -p build
      - persist_to_workspace:
          root: .
          paths:
            - "."
  format:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y clang-format
      - run:
          name: Setup cmake
          command: |
            cd build
            cmake ..
      - run:
          name: Run clang-format
          command: |
            cd build
            make format
  build_release:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y clang-tidy lcov ccache
      - run:
          name: Setup cmake
          command: |
            cd build
            cmake ..
      - run:
          name: Build
          command: |
            cd build
            make
      - persist_to_workspace:
          root: .
          paths:
            - "."
  build_debug:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y clang-tidy lcov ccache gcovr
      - run:
          name: Setup cmake
          command: |
            cd build
            cmake -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE_VERBOSE=Yes ..
      - run:
          name: Build
          command: |
            cd build
            make
      - persist_to_workspace:
          root: .
          paths:
            - "."
  test:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Execute tests
          command: |
            cd build
            make test
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y npm lcov gcovr
      - run:
          name: Generate coverage report
          command: |
            cd build
            make coverage
      - coveralls/upload:
          path_to_lcov: ./build/coverage.info
          token: COVERALLS_REPO_TOKEN
      - persist_to_workspace:
          root: .
          paths:
            - "."
  sonarqube:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - sonarcloud/scan
  memory-check:
    docker:
      - image: cimg/base:stable
    resource_class: small
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y valgrind
      - run:
          name: Run Valgrind on program_adder
          command: valgrind ./build/bin/examples/programs/program_adder

workflows:
  build-and-test:
    jobs:
      - prepare_environment
      - format:
          requires:
            - prepare_environment
      - build_release:
          requires:
            - format
      - build_debug:
          requires:
            - format
      - test:
          requires:
            - build_debug
      - sonarqube:
          context: SonarCloud
          requires:
            - test
      - memory-check:
          requires:
            - build_debug
